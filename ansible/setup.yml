---
#
# Configure VPC, Security group, IAM roles and Instance profiles
#
#
- hosts: localhost
  connection: local
  gather_facts: no

  vars_files:
    - vars.yml

  tasks:

    - name: Create VPC
      local_action:
        module: ec2_vpc
        state: present
        cidr_block: 172.23.0.0/16
        resource_tags: { "Name":"{{project_name}}" }
        region: "{{region}}"
        internet_gateway: true
        subnets:
          - cidr: 172.23.1.0/24
            resource_tags: { "Name":"{{project_name}}-1" }
        subnets:
          - cidr: 172.23.2.0/24
            resource_tags: { "Name":"{{project_name}}-2" }
        subnets:
          - cidr: 172.23.3.0/24
            resource_tags: { "Name":"{{project_name}}-3" }
      register: vpc

    - name: Persist VPC Config
      template: src=templates/vpc_setup.j2 dest="./vpc_settings.yml"
      when: "vpc.changed"

    - name: Create key pair
      local_action:
        module: ec2_key
        region: "{{region}}"
        name: "{{private_key}}"
      register: result

    - name: Ensure private key file exists locally
      local_action: 
        module: copy 
        content: "{{ result.key.private_key }}"
        dest: "./{{ region }}-{{ private_key }}.pem"
        mode: 0400
      when: "result.changed"

    - name: Configure security groups
      local_action:
        module: ec2_group
        name: "{{project_name}}"
        description: "{{project_name}} game server security group"
        vpc_id: "{{vpc.vpc_id}}"
        region: "{{region}}"
        purge_rules: true
        # write you
        rules:
          # SSH
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          # http
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
          # Websocket (used by the game client)
          - proto: tcp
            from_port: 8080
            to_port: 8080
            cidr_ip: 0.0.0.0/0

    - name: "Create IAM role {{item}}"
      local_action:
        region: "us-east-1"
        module: aws_iam_role
        role_name: "{{item}}"
        assume_role_policy_document: "iam/{{item}}-EC2-Trust.json"
      with_items:
        - "{{baker_iam}}"
        - "{{instance_iam}}"
    - name: "Upload policy {{item}}-EC2-Permissions"
      local_action:
        module: aws_iam_role_policy
        region: "us-east-1"
        role_name: "{{item}}"
        policy_name: "{{item}}-EC2-Permissions"
        policy_document: "iam/{{item}}-EC2-Permissions.json"
      with_items:
        - "{{baker_iam}}"
        - "{{instance_iam}}"
    - name: "Create instance profile {{item}}"
      local_action:
        region: "us-east-1"
        module: aws_iam_instance_profile
        profile_name: "{{item}}InstanceProfile"
      with_items:
        - "{{baker_iam}}"
        - "{{instance_iam}}"
    - name: "Add our {{item}} to instance profile {{item}}InstanceProfile"
      local_action:
        region: "us-east-1"
        module: aws_iam_instance_profile_role
        profile_name: "{{item}}InstanceProfile"
        role_name: "{{item}}"
      with_items:
        - "{{baker_iam}}"
        - "{{instance_iam}}"
